apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: {{ template "elasticsearch.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.data.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "elasticsearch.data.fullname" . }}
spec:
  serviceName: {{ template "elasticsearch.data.fullname" . }}
  replicas: {{ .Values.data.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "elasticsearch.name" . }}
        component: "{{ .Values.data.name }}"
        release: {{ .Release.Name }}
        {{- if .Values.data.podAnnotations }}
      annotations:
{{ toYaml .Values.data.podAnnotations | indent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "elasticsearch.fullname" . }}
      {{- if eq .Values.data.antiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: "{{ template "elasticsearch.name" . }}"
                  release: "{{ .Release.Name }}"
                  component: "{{ .Values.data.name }}"
      {{- else if eq .Values.data.antiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "{{ template "elasticsearch.name" . }}"
                  release: "{{ .Release.Name }}"
                  component: "{{ .Values.data.name }}"
      {{- end }}
      initContainers:
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
      # and https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration-memory.html#mlockall
      - name: "sysctl"
        image: "busybox"
        imagePullPolicy: "Always"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      {{- if .Values.cluster.plugins.list }}
      - name: "plugins"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command: ["/bin/bash"]
        args: 
        - "-c"
        - |
          declare -A plugins;
          plugins=( {{ range $name, $parameters := .Values.cluster.plugins.list }}[{{ $name | quote }}]={{- if $parameters.url }}{{ $parameters.url | quote }}{{ else }}{{ $name | quote }} {{- end }} {{ end }} );
          for i in "${!plugins[@]}";
          do
            plugin list | grep -q "$i" || plugin install "${plugins[$i]}";
          done
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/plugins
          name: {{ .Values.cluster.plugins.volume.name }}
      {{- end }}
      - name: "chown"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command:
        - /bin/bash
        - -c
        - chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/data &&
          chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/logs
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: data
      containers:
      - name: elasticsearch
        env:
        - name: SERVICE
          value: {{ template "elasticsearch.master.fullname" . }}
        - name: KUBERNETES_MASTER
          value: kubernetes.default.svc.cluster.local
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_MASTER
          value: "false"
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: ES_JAVA_OPTS
          value: "-Djava.net.preferIPv4Stack=true -Xms{{ .Values.data.heapSize }} -Xmx{{ .Values.data.heapSize }}"
        {{- range $key, $value :=  .Values.cluster.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        ports:
        - containerPort: 9300
          name: transport
{{ if .Values.data.exposeHttp }}
        - containerPort: 9200
          name: http
{{ end }}
        resources:
{{ toYaml .Values.data.resources | indent 12 }}
        readinessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
          initialDelaySeconds: 5
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: data
      {{- if .Values.cluster.customScripts }}
        - mountPath: /usr/share/elasticsearch/scripts
          name: scripts
      {{- end }}
      {{- if .Values.cluster.plugins.list }}
        - mountPath: /usr/share/elasticsearch/plugins
          name: {{ .Values.cluster.plugins.volume.name }}
      {{- end }}
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: config
          subPath: elasticsearch.yml
{{- if hasPrefix "2." .Values.image.tag }}
        - mountPath: /usr/share/elasticsearch/config/logging.yml
          name: config
          subPath: logging.yml
{{- end }}
{{- if hasPrefix "5." .Values.image.tag }}
        - mountPath: /usr/share/elasticsearch/config/log4j2.properties
          name: config
          subPath: log4j2.properties
{{- end }}
        - name: config
          mountPath: /pre-stop-hook.sh
          subPath: pre-stop-hook.sh
        lifecycle:
          preStop:
            exec:
              command: ["/bin/bash","/pre-stop-hook.sh"]
      terminationGracePeriodSeconds: {{ .Values.data.terminationGracePeriodSeconds }}
      volumes:
    {{- if .Values.cluster.customScripts }}
      - name: scripts
        configMap:
          name: {{ .Values.cluster.customScripts.configMap }}
    {{- end }}
      - name: config
        configMap:
          name: {{ template "elasticsearch.fullname" . }}
    {{- if not .Values.data.persistence.enabled }}
      - name: data
        emptyDir: {}
    {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.data.persistence.name }}
    spec:
      accessModes:
        - {{ .Values.data.persistence.accessMode | quote }}
    {{- if .Values.data.persistence.storageClass }}
    {{- if (eq "-" .Values.data.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ .Values.data.persistence.storageClass }}"
    {{- end }}
    {{- end }}
      resources:
        requests:
          storage: "{{ .Values.data.persistence.size }}"
  {{- end }}
  {{- if .Values.cluster.plugins.persistence.enabled }}
  - metadata:
      name: {{ .Values.cluster.plugins.volume.name }}
    spec:
      accessModes:
        - {{ .Values.cluster.plugins.persistence.accessMode | quote }}
    {{- if .Values.cluster.plugins.persistence.storageClass }}
    {{- if (eq "-" .Values.cluster.plugins.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ .Values.cluster.plugins.persistence.storageClass }}"
    {{- end }}
    {{- end }}
      resources:
        requests:
          storage: {{ .Values.cluster.plugins.persistence.size | quote }}
  {{ end }}